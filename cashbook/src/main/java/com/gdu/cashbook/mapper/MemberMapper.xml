<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- 네임스페이스는 매퍼의 위치와 매퍼의 이름 -->
<mapper namespace="com.gdu.cashbook.mapper.MemberMapper">
	<!-- id는 매퍼의 메소드이름과 동일하게.	파라미터타입은 항상 리스트. 클래스데이터타입의 위치와 이름을 작성 -->
	
	<!-- 멤버 한명 삭제.. 관리자 기능 -->
	<delete id="removeByAdmin" parameterType="String">
		DELETE FROM member
		WHERE member_id = #{memberId}
	</delete>
		
	<!-- 멤버 리스트 출력 -->
	<select id="selectMemberListAll" resultType="com.gdu.cashbook.vo.Member">
		SELECT
			member_id as memberId,
			member_name as memberName,
			member_phone as memberPhone,
			member_addr as memberAddr,
			member_mail as memberMail
		FROM member
	</select>
	
	<!-- 멤버 탈퇴시 사진 이름 가져오기 -->
	<select id="selectMemberPic" parameterType="String" resultType="String">
		SELECT member_pic
		FROM member
		WHERE member_id = #{memberId}
	</select>
	
	<!-- 아이디와 이멜일을 입력해서 리턴값이 있는지 없는지를 알아내는 메소드  -->
	<!-- 
		1. 사용자가 입력한 아이디와 이메일을 확인해서 값이 있는지 확인되면 pw변경	// update
		2. pw를 메일로 전송
	 -->
	<update id="updateMemberPw" parameterType="com.gdu.cashbook.vo.Member">
		UPDATE member
		SET member_pw = PASSWORD(#{memberPw})
		WHERE member_id = #{memberId}
		AND member_mail = #{memberMail}
	</update>
		
	<!-- 이름, 이메일, 전화번호를 입력받아 아이디값을 리턴하는 아이디검색쿼리-->
	<select id="selectMemberIdByMember" parameterType="com.gdu.cashbook.vo.Member" resultType="String">
		SELECT
			CONCAT(SUBSTRING(member_id, 1, 3) ,'****')
		FROM member
		WHERE member_name = #{memberName}
		AND	member_mail = #{memberMail}
		AND member_phone = #{memberPhone}
	</select>
	
	<!-- 삭제시 memberid 테이블에 추가되는쿼리 -->
	<insert id="insertMemberId" parameterType="String">
		INSERT INTO memberid(
			member_id
		) VALUES (
			#{memberId}
		)
	</insert>
	
	<!-- 멤버 삭제 -->
	<delete id="removeMember" parameterType="com.gdu.cashbook.vo.LoginMember">
		DELETE FROM member
		WHERE member_id = #{memberId}
		AND member_pw = PASSWORD(#{memberPw})
	</delete>
	
	<!-- 멤버 정보 수정 -->
	<update id="modifyMember" parameterType="com.gdu.cashbook.vo.Member">
		UPDATE member
		SET
			member_pw = PASSWORD(#{memberPw}),
			member_name = #{memberName},
			member_phone = #{memberPhone},
			member_addr = #{memberAddr},
			member_mail = #{memberMail},
			member_pic = #{memberPic}
		WHERE
			member_id = #{memberId}
			
	</update>
	 
	<!-- 멤버 한명 정보 전체출력 -->
	<select id="selectMemberOneAll" parameterType="com.gdu.cashbook.vo.LoginMember" resultType="com.gdu.cashbook.vo.Member">
		SELECT
			member_id as memberId,
			member_pw as memberPw,
			member_name as memberName,
			member_phone as memberPhone,
			member_addr as memberAddr,
			member_mail as memberMail,
			member_pic as memberPic
		FROM member
		WHERE member_id = #{memberId}
	</select>
	
	<!-- 멤버 한명 정보 출력 -->
	<select id="selectMemberOne" parameterType="com.gdu.cashbook.vo.LoginMember" resultType="com.gdu.cashbook.vo.Member">
		SELECT
			member_id as memberId,
			member_name as memberName,
			member_phone as memberPhone,
			member_addr as memberAddr,
			member_mail as memberMail,
			member_pic as memberPic
		FROM member
		WHERE member_id = #{memberId}
	</select>
	
	<!-- 멤버 아이디 중복체크 -->
	<select id="selectMemberId" parameterType="String" resultType="String">
		SELECT member_id
		FROM
			(SELECT member_id FROM member
			UNION
			SELECT member_id FROM memberid) t
		WHERE member_id = #{memberIdCheck}
	</select>
	
	<!-- 로그인 멤버 셀렉트 -->
	<select id="selectLoginMember" parameterType="com.gdu.cashbook.vo.LoginMember" resultType="com.gdu.cashbook.vo.LoginMember">
		SELECT
			member_id as memberId,
			member_pw as memberPw,
			member_pic as memberPic
		FROM member
		WHERE member_id = #{memberId}
		AND member_pw = PASSWORD(#{memberPw})
	</select>
	
	<!-- 멤버 인서트 -->
	<insert id="addMember" parameterType="com.gdu.cashbook.vo.Member">
		INSERT INTO member(
			member_id,
			member_pw,
			member_name,
			member_phone,
			member_addr,
			member_mail,
			member_pic
		) VALUES (
			#{memberId},
			PASSWORD(#{memberPw}),
			#{memberName},
			#{memberPhone},
			#{memberAddr},
			#{memberMail},
			#{memberPic}
		)
	</insert>
	
</mapper>